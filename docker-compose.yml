services:
  app:
    build:
      context: ./backend
      dockerfile: php/Dockerfile
    container_name: laravel_app
    working_dir: /var/www
    volumes:
      - ./backend:/var/www
    networks:
      - laravel
    depends_on:
      - mariadb
      - redis
    environment:
      - "DB_CONNECTION=mysql"
      - "DB_HOST=mariadb"
      - "DB_PORT=3306"
      - "DB_DATABASE=${DB_DATABASE:-laravel}"
      - "DB_USERNAME=${DB_USERNAME:-laravel}"
      - "DB_PASSWORD=${DB_PASSWORD:-secret}"
      - "REDIS_HOST=redis"
      - "REDIS_PORT=6379"
      - "APP_KEY=${APP_KEY:-laravel}"
      - "FONT_END_BASE=${FONT_END_BASE:-http://localhost:3001/api/revalidate}"
      - "APP_DEBUG=${APP_DEBUG:-true}"


  nginx:
    image: nginx:1.25-alpine
    container_name: laravel_nginx
    ports:
      - "80:80"
    volumes:
      - ./backend/:/var/www
      - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf
    networks:
      - laravel
    depends_on:
      - app

  mariadb:
    image: mariadb:11
    container_name: laravel_mariadb
    restart: unless-stopped
    environment:
      MYSQL_DATABASE: ${DB_DATABASE:-laravel}
      MYSQL_USER: ${DB_USERNAME:-laravel}
      MYSQL_PASSWORD: ${DB_PASSWORD:-secret}
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD:-root}
    volumes:
      - mariadb_data:/var/lib/mysql
      - ./docker/mariadb/my.cnf:/etc/mysql/conf.d/my.cnf:ro
      # - ./docker/mariadb/initdb.d:/docker-entrypoint-initdb.d:ro
    networks:
      - laravel

  redis:
    image: redis:7-alpine
    container_name: laravel_redis
    command: ["redis-server", "/usr/local/etc/redis/redis.conf"]
    volumes:
      - redis_data:/data
      - ./docker/redis/redis.conf:/usr/local/etc/redis/redis.conf:ro
    networks:
      - laravel
  
  next:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      # multi-stage: dev vs prod
      target: ${NEXT_ENV:-dev}   # dev | prod
    container_name: nextjs
    ports:
      - "${NEXT_PORT:-3000}:3000"
    volumes:
      - ./frontend:/app            # live source for HMR
      - /app/node_modules      # prevent host overwrite
    networks:
      - laravel
    environment:
      - NODE_ENV=${NEXT_ENV:-development}
      - BASE_URL=${BASE_URL:-http://nginx/api/}
      - REVALIDATION_TOKEN=${REVALIDATION_TOKEN:-'N0Sug@r'}
    depends_on:
      - nginx   # make sure Laravel is up
    command: ["npm","run","dev"]   

  adminfromt:
    build:
      context: ./admin
      dockerfile: Dockerfile
      # multi-stage: dev vs prod
      target: ${NEXT_ENV:-dev}   # dev | prod
    container_name: admin
    ports:
      - "${NEXT_PORT:-3001}:3001"
    volumes:
      - ./admin:/app            # live source for HMR
      - /app/node_modules      # prevent host overwrite
    networks:
      - laravel
    environment:
      - NODE_ENV=${NEXT_ENV:-development}
      - NEXT_PUBLIC_API_URL=${NEXT_PUBLIC_API_URL:-http://nginx/api/}
      - REVALIDATION_TOKEN=${REVALIDATION_TOKEN:-'N0Sug@r'}
    depends_on:
      - nginx   # make sure Laravel is up
    command: ["npm","run","dev"]        

volumes:
  mariadb_data:
  redis_data:

networks:
  laravel:
